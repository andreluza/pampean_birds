
     
     model {
     
      # set priors
      # site occupancy
      int.psi ~ dunif (0,1)
      #beta.agri ~ dnorm (0,0.001)
      beta.grass ~ dnorm (0,0.001)
      #beta.tree ~ dnorm (0,0.001)
      
      # detection
      int.p ~ dunif (0,1)
      alpha.temp ~dnorm (0,001)
      alpha.umid ~dnorm (0,001)
      alpha.area ~dnorm (0,001)
      
      # ----------------------
      # model likelihood
      # site-occupancy model (first level)
      for (i in 1:nsites) {
      
        z[i] ~ dbern (psi[i])
        logit (psi[i]) <- int.psi + beta.grass*grass[i]
        
      }
       
       # ----------------------------------- #
       # detection model (second level)
       #----------------------------------- #
       
       # likelihood 
       
        for (i in 1:nsites) {
           for (k in 1:nocc) {
          
             y[i,k] ~ dbern (z[i] * p[i,k])
             logit (p[i,k]) <- int.p + alpha.temp*temp[i,k]+
                                       alpha.umid*umid[i,k]+
                                       alpha.area*det_area[i]
            
             }
          }
        
        # goodness of fit
	# predictive posterior checks
	# chi squared discrepancy

	for (i in 1:nsites) {
	   for (k in 1:nocc) {

	       y.sim [i,k] ~ dbern (e.sim[i,k]) # simulate data under the model
	       e.sim [i,k] <- z[i]*p[i,k]  # expected data under the model
	       # chi squared discrepancy for the actual data
	       chi2.actual[i,k] <- pow((y[i,k]-e.sim[i,k]),2)/(e.sim[i,k]+e)
	       # chi squared discrepancy for the simulated data
	       chi2.sim[i,k] <- pow((y.sim[i,k]-e.sim[i,k]),2)/(e.sim[i,k]+e)
		     # 'e' to avoid division by zero


	   }

	}
	        
  # derived params
	# chi 2 discrepancy across data
	fit.actual <- sum ( chi2.actual[,])       
	fit.sim <- sum ( chi2.sim[,])
	# Bayesian p-value, compare actual and simulated data
	bpv <- step (fit.sim - fit.actual)

	# site occupancy probability
	mean.psi <- mean (psi[])
  fss <- sum (z[])
      mean.p <- mean(p[,])
      }
     
